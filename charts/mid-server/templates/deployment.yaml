{{- $root := . }}
{{- range $podIndex := until (.Values.replicaCount | int) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $root.Values.midServerNamePrefix }}-{{ $podIndex }}"
  labels:
      app: "{{ $root.Values.midServerNamePrefix }}-{{ $podIndex }}"
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: "{{ $root.Values.midServerNamePrefix }}-{{ $podIndex }}"
  template:
    metadata:
      labels:
        app: "{{ $root.Values.midServerNamePrefix }}-{{ $podIndex }}"
    spec:
      {{- with $root.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: "svc-acct-{{ $root.Values.midServerNamePrefix }}"
      containers:
        - name: "{{ $root.Values.midServerNamePrefix }}-{{ $podIndex }}"
          securityContext:
            {{- toYaml $root.Values.securityContext | nindent 12 }}
          image: "{{ $root.Values.image.repository }}:{{ $root.Values.image.tag | default $root.Chart.AppVersion }}"
          imagePullPolicy: {{ $root.Values.image.pullPolicy }}
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c 
              - '/bin/ps aux | grep /opt/snc_mid_server/agent/jre/bin/java'
            initialDelaySeconds: 60
            periodSeconds: 15
          resources:
            {{- toYaml $root.Values.resources | nindent 12 }}
          env:
            - name: "MID_SERVER_NAME"
              value: "{{ $root.Values.midServerNamePrefix }}-{{ $podIndex }}"
            {{- toYaml $root.Values.env | nindent 12 }}
{{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "svc-acct-{{ $root.Values.midServerNamePrefix }}"
  namespace: default
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "svc-role-{{ $root.Values.midServerNamePrefix }}"
  namespace: default
rules:
  # Allow Discovery to see all namespsaces, services, pods, and nodes.
  - apiGroups: [""]
    resources: ["namespaces","services","pods","nodes"]
    verbs: ["get","list"]
  # Allow Discovery to see the kube-controller-manager.
  - apiGroups: [""]
    resources: ["endpoints"]
    resourceNames: ["kube-controller-manager"]
    verbs: ["get","list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: discovery
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "svc-role-{{ $root.Values.midServerNamePrefix }}"
subjects:
  - kind: ServiceAccount
    name: "svc-acct-{{ $root.Values.midServerNamePrefix }}"
    namespace: default
